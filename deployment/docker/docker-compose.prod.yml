version: '3.8'

services:
  # Backend API service
  backend:
    build: ./backend
    restart: always
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/leadscoring
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

  # Frontend service
  frontend:
    build: ./frontend
    restart: always
    volumes:
      - ./frontend:/app
      - frontend_build:/app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "127.0.0.1:5432:5432" # Only accessible locally
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=leadscoring

  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "127.0.0.1:6379:6379" # Only accessible locally
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}

  # Celery worker for background tasks
  celery:
    build: ./backend
    restart: always
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/leadscoring
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      - db
      - redis
    command: celery -A app.worker.celery worker --loglevel=info

  # Celery beat for scheduled tasks
  celery-beat:
    build: ./backend
    restart: always
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/leadscoring
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      - db
      - redis
      - celery
    command: celery -A app.worker.celery beat --loglevel=info

volumes:
  postgres_data:
  redis_data:
  frontend_build: 